#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: ft=python
import contextlib
import os
import subprocess
import sys
import re


class ChDir():
    def __init__(self, path):
        self.path = path

    def __enter__(self):
        self.cur_dir = os.getcwd()
        os.chdir(self.path)

    def __exit__(self, exc_type, exc_val, exc_tb):
        os.chdir(self.cur_dir)


def main():
    args = dict((i,v) for i, v in enumerate(sys.argv))
    dir = os.getcwd()
    if 1 in args:
        dir = args[1]
    if isGit(dir):
        print(getRemote(dir))
    sys.exit(0)


def getRemote(path):
    with ChDir(path):
        p = subprocess.Popen(
            "git config remote.origin.url",
            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE
        )
        if p.wait() == 0:
            return procURL(p.stdout.read().rstrip("\n\r"))
        else:
            return None

def procURL(url):
    isSSH = True
    protocolPrefix = re.compile(".*?://")
    if protocolPrefix.match(url):
        url = protocolPrefix.sub("", url)
        isSSH = False
    if isSSH:
        parts = url.split(":")
        return "{} {}".format(parts[0], parts[1])
    else:
        parts = url.split("/")
        return "{} {}".format(parts[0], "/".join(parts[1:]))


def isGit(path):
    with ChDir(path):
        p = subprocess.Popen(
            "git status",
            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE
        )
        if p.wait() == 0:
            return True
    return False

if __name__ == "__main__":
    main()
