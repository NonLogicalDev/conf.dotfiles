#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs ######################################################

source ~/.zfunc
source ~/.zdir
source ~/SHELL_VARS

# Setting up aliases
function exists { which $1 &> /dev/null }

alias fuck='sudo $(fc -ln -1)'
alias godev='boxer v $DBOX'
alias vim='nvim'
alias tmcs='tmux show-buffer | pbcopy'
alias mux='tmuxinator'
alias vim='nvim'

# Docker Maching Automation for mac
function docker-machine-init {
  if [[ ! -n "$(docker-machine active 2>/dev/null)" ]]; then
    echo "Starting Default VM..." 
    docker-machine start dev
  fi
  echo "Updating ENVironment..."
  eval $(docker-machine env dev)
  echo "Done"
  export dockerhost=$(docker-machine ip dev)
}

function botch() {
    TIME=$1
    shift 1
    while true; do
        (echo -en '\033[H'
            CMD="$@"
            bash -c "$CMD" | while read LINE; do 
                echo -n "$LINE"
                echo -e '\033[0K' 
            done
            echo -en '\033[J')
        sleep $TIME
    done
}

function mkvim {
  SERVERNAME=$1
  shift
  mvim --servername $SERVERNAME $@
}

function uvim {
  SERVERS=$(mvim --serverlist)
  if [[ -z $SERVERS ]]; then
    echo "NO GUI Server is running"
    mkvim GUI $@
  else
    mvim --servername $(echo $SERVERS|percol) --remote $@
  fi
}

if exists percol; then
    function percol_select_history() {
        local tac
        exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
        BUFFER=$(fc -l -n 1 | eval $tac | percol --query "$LBUFFER")
        CURSOR=$#BUFFER         # move cursor
        zle -R -c               # refresh
    }

    zle -N percol_select_history
    bindkey '^R' percol_select_history

    function change-directory-find() {
      SELECTED_DIR=$(find $* | percol)
      if [[ ! -z "$SELECTED_DIR" ]]; then
        cd $SELECTED_DIR
      fi
    }
    alias fcd='change-directory-find'
fi

# I want to install apps where they belong
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

export PATH="$HOME/bin:$PATH"
export ANSIBLE_NOCOWS=1


# Local settings
if [ -e $HOME/.zshrc_local ]; then
  . $HOME/.zshrc_local
fi
