#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs ######################################################

# Import all of the local SHELL vars
if [[ ! -f ~/SHELL_VARS ]]; then
  touch SHELL_VARS
fi
source ~/SHELL_VARS

# Add the frecent directory searcher
if [[ ! -f ~/.z ]]; then
  touch ~/.z
fi
source ~/.zdir

# Adding all of my amazing functions
source ~/.zfunc

# Setting up aliases
function exists { which $1 &> /dev/null }

alias fuck='sudo $(fc -ln -1)'
alias vim='nvim'
alias tmcs='tmux show-buffer | pbcopy'
alias mux='tmuxinator'
alias vim='nvim'

if [[ "$PLATFORM" == 'LINUX' ]]; then
  if exists xdg-open; then
    export OPEN_CMD=`which xdg-open`
    function open() {
      echo $*
      $OPEN_CMD "$*" & disown
    }
  end
elif [[ "$PLATFORM" == 'MAC' ]]; then
  export OPEN_CMD=`which open`
  function open() {
    echo $*
    $OPEN_CMD "$*"
  }
fi

function botch() {
    TIME=$1
    shift 1
    while true; do
        (echo -en '\033[H'
            CMD="$@"
            bash -c "$CMD" | while read LINE; do 
                echo -n "$LINE"
                echo -e '\033[0K' 
            done
            echo -en '\033[J')
        sleep $TIME
    done
}

if exists percol; then
    function percol_select_history() {
        local tac
        exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
        BUFFER=$(fc -l -n 1 | eval $tac | percol --query "$LBUFFER")
        CURSOR=$#BUFFER         # move cursor
        zle -R -c               # refresh
    }

    zle -N percol_select_history
    bindkey '^R' percol_select_history

    function change-directory-find() {
      SELECTED_DIR=$(find $* | percol)
      if [[ ! -z "$SELECTED_DIR" ]]; then
        cd $SELECTED_DIR
      fi
    }
    alias fcd='change-directory-find'
fi

# MOVED AWAY FROM USING MVIM
# --------------------------
# function mkvim {
#   SERVERNAME=$1
#   shift
#   mvim --servername $SERVERNAME $@
# }
#
# function uvim {
#   SERVERS=$(mvim --serverlist)
#   if [[ -z $SERVERS ]]; then
#     echo "NO GUI Server is running"
#     mkvim GUI $@
#   else
#     mvim --servername $(echo $SERVERS|percol) --remote $@
#   fi
# }
# --------------------------

# I want to install apps where they belong
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

path_prepend "$HOME/bin"
export ANSIBLE_NOCOWS=1

# Local settings
if [ -e $HOME/.zshrc_local ]; then
  . $HOME/.zshrc_local
fi

path_dedup
