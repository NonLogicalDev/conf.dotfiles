#
# Defines environment variables.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ "$SHLVL" -eq 1 && ! -o LOGIN && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

#######################################################################
#                           Define Platform                           #
#######################################################################

if (( $+commands[uname] )); then
  if [[ "$(uname)" == "Darwin" ]]; then
    PLATFORM="MAC"
  elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
    PLATFORM="LINUX"
  elif [[ "$(expr substr $(uname -s) 2 10)" == "MINGW32_NT" ]]; then
    PLATFORM="WIN"
  fi
fi

if ! [[ -v PLATFORM ]]; then
  PLATFORM="UNKNOWN"
fi

export PLATFORM

#######################################################################
#                       Path Related Functions                        #
#######################################################################

function path_dedup {
  if [ -n "$PATH" ]; then
    old_PATH=$PATH:; PATH=
    while [ -n "$old_PATH" ]; do
      x=${old_PATH%%:*}       # the first remaining entry
      case $PATH: in
        *:"$x":*) ;;         # already there
        *) PATH=$PATH:$x;;    # not there yet
      esac
      old_PATH=${old_PATH#*:}
    done
    PATH=${PATH#:}
    unset old_PATH x
  fi
}

function path_append() {
  for ARG in "$@"
  do
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="${PATH:+"$PATH:"}$ARG"
    fi
  done
}

function path_prepend() {
  for ((i=$#; i>0; i--)); 
  do
    eval "ARG=\${$i}"
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="$ARG${PATH:+":$PATH"}"
    fi
  done
}

# Setting up brew
if [[ "$PLATFORM" == "LINUX" ]]; then
  path_prepend "$HOME/.linuxbrew/bin"
fi

# Add local Bin dirs
path_prepend "$HOME/.local/bin"
path_prepend "$HOME/bin"

