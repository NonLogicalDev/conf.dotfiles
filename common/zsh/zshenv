#
# Defines environment variables.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#
# Easily determine where the zsh is running
#
function get_platform {
  if [[ "$(uname)" == "Darwin" ]]; then
    echo "MAC"
  elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
    echo "LINUX"
  elif [[ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]]; then
    echo "WIN"
  else
    echo "UNKNOWN"
  fi
}

export PLATFORM=`get_platform`

#
# Make path entries unique
#
function path_dedup {
  typeset -U path
}

function path_append() {
  for ARG in "$@"
  do
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="${PATH:+"$PATH:"}$ARG"
    fi
  done
}

function path_prepend() {
  for ((i=$#; i>0; i--)); 
  do
    eval "ARG=\${$i}"
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="$ARG${PATH:+":$PATH"}"
    fi
  done
}

# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ "$SHLVL" -eq 1 && ! -o LOGIN && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

# Setting up brew
if [[ $(get_platform) == "LINUX" ]]; then
  export PATH="$HOME/.linuxbrew/bin:$PATH"
fi

#######################################################################
#                 Adding Version Managers to the path                 #
#######################################################################

## Adding Node Version Manger
function init_node {
  export NVM_DIR="$HOME/.nvm"
  if [[ -s "$NVM_DIR/nvm.sh" ]]; then
    echo "Initializing Node..."
    source "$NVM_DIR/nvm.sh"
    nvm use node
  fi
}

function init_ruby {
  ## Adding Ruby Version Manager
  # Installed through brew or apt
  if [[ -x "$(which rbenv)" ]]; then
    echo "Initializing Ruby..."
    eval "$(rbenv init -)"
  fi
}

function init_python {
  ## Adding Python Version Manager
  # Installed through brew or apt
  path_prepend "$HOME/Library/Python/2.7/bin"
  if [[ -x "$(which pyenv)" ]]; then
    echo "Initializing Python..."
    eval "$(pyenv init -)"
  fi
}

function init_java {
  # Adding java version manager
  if [[ -x "$(which jenv)" ]]; then
    echo "Initializing JVM..."
    export JVM_DIR="$HOME/.jenv"
    path_prepend "$JVM_DIR"
    eval "$(jenv init -)"
  fi
}

function init_lua {
  ## Adding Torch
  export TORCH_DIR="$HOME/torch/install"
  if [[ -s  "$TORCH_DIR/bin/torch-activate" ]]; then
    echo "Initializing Torch..."
    source "$TORCH_DIR/bin/torch-activate"
  fi
}

function init_iterm_integration {
  if [[ -s "${HOME}/.iterm2_shell_integration.zsh" ]]; then
    echo "Initializing iTerm..."
    source "${HOME}/.iterm2_shell_integration.zsh"
  fi
}

function init_full_dev {
  init_node
  init_ruby
  init_python
  init_java
  init_lua
  init_iterm_integration
}

